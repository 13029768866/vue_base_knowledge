{"version":3,"file":"vue.js","sources":["../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["class Observer {\r\n  constructor(value){\r\n    this.walk(value)\r\n  }\r\n  walk(data){\r\n    let keys = Object.keys(data);\r\n    keys.forEach(key => {\r\n      defineReactive(data,key,data[key])\r\n    })\r\n\r\n  }\r\n}\r\nfunction defineReactive(obj,attr,value) {\r\n  Object.defineProperty(obj,attr,{\r\n    get() {\r\n      console.log('用户获取');\r\n      return value;\r\n    },\r\n    set(newValue){\r\n      console.log('用户设置');\r\n      if(newValue === value ) return;\r\n      value = newValue;\r\n    }\r\n  })\r\n}\r\n\r\nexport function observer(data) {\r\n  /* 类型判断 */\r\n  if(typeof data !== 'object' || data === null) return;\r\n  return new Observer(data);\r\n}\r\n","import {observer} from \"./observer/index\";\r\n\r\nexport function initState(vm) {\r\n  let opts = vm.$options;\r\n  /* 依照顺序,依次初始化 */\r\n  if(opts.props){\r\n    initProps(vm);\r\n  }\r\n  if(opts.methods){\r\n    initMethods(vm);\r\n  }\r\n  if(opts.data){\r\n    initData(vm);\r\n  }\r\n  if(opts.computed){\r\n    initComputed(vm);\r\n  }\r\n  if(opts.watch){\r\n    initWatch(vm);\r\n  }\r\n}\r\n\r\n\r\nfunction initProps(vm) {\r\n\r\n}\r\nfunction initMethods(vm) {\r\n\r\n}\r\nfunction initData(vm) {\r\n  /* 1、类型判断 */\r\n  let data = vm.$options.data;\r\n  vm._data = data = typeof data === 'function'? data.call(vm) : data;\r\n\r\n  observer(data);\r\n\r\n}\r\nfunction initComputed(vm) {\r\n\r\n}\r\nfunction initWatch(vm) {\r\n\r\n}\r\n","import {initState} from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this;\r\n    vm.$options = options;\r\n\r\n    /* 状态初始化 */\r\n    initState(vm);\r\n  }\r\n}\r\n","import {initMixin} from \"./init\";\r\n\r\n\r\nfunction Vue(options){\r\n  /* 1、options初始化 */\r\n  this._init(options);\r\n}\r\n\r\n/* 初始化(原型上挂载方法) */\r\ninitMixin(Vue);\r\n\r\n\r\nexport default Vue;\r\n"],"names":["Observer","value","walk","data","keys","Object","forEach","key","defineReactive","obj","attr","defineProperty","get","console","log","set","newValue","observer","initState","vm","opts","$options","props","methods","initData","computed","watch","_data","call","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAMA;EACJ,oBAAYC,KAAZ,EAAkB;EAAA;;EAChB,SAAKC,IAAL,CAAUD,KAAV;EACD;;;;2BACIE,MAAK;EACR,UAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,IAAZ,CAAX;EACAC,MAAAA,IAAI,CAACE,OAAL,CAAa,UAAAC,GAAG,EAAI;EAClBC,QAAAA,cAAc,CAACL,IAAD,EAAMI,GAAN,EAAUJ,IAAI,CAACI,GAAD,CAAd,CAAd;EACD,OAFD;EAID;;;;;;EAEH,SAASC,cAAT,CAAwBC,GAAxB,EAA4BC,IAA5B,EAAiCT,KAAjC,EAAwC;EACtCI,EAAAA,MAAM,CAACM,cAAP,CAAsBF,GAAtB,EAA0BC,IAA1B,EAA+B;EAC7BE,IAAAA,GAD6B,iBACvB;EACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;EACA,aAAOb,KAAP;EACD,KAJ4B;EAK7Bc,IAAAA,GAL6B,eAKzBC,QALyB,EAKhB;EACXH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;EACA,UAAGE,QAAQ,KAAKf,KAAhB,EAAwB;EACxBA,MAAAA,KAAK,GAAGe,QAAR;EACD;EAT4B,GAA/B;EAWD;;EAEM,SAASC,QAAT,CAAkBd,IAAlB,EAAwB;EAC7B;EACA,MAAG,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAxC,EAA8C;EAC9C,SAAO,IAAIH,QAAJ,CAAaG,IAAb,CAAP;EACD;;EC5BM,SAASe,SAAT,CAAmBC,EAAnB,EAAuB;EAC5B,MAAIC,IAAI,GAAGD,EAAE,CAACE,QAAd;EACA;;EACA,MAAGD,IAAI,CAACE,KAAR,EAAc;;EAGd,MAAGF,IAAI,CAACG,OAAR,EAAgB;;EAGhB,MAAGH,IAAI,CAACjB,IAAR,EAAa;EACXqB,IAAAA,QAAQ,CAACL,EAAD,CAAR;EACD;;EACD,MAAGC,IAAI,CAACK,QAAR,EAAiB;;EAGjB,MAAGL,IAAI,CAACM,KAAR,EAAc;EAGf;;EASD,SAASF,QAAT,CAAkBL,EAAlB,EAAsB;EACpB;EACA,MAAIhB,IAAI,GAAGgB,EAAE,CAACE,QAAH,CAAYlB,IAAvB;EACAgB,EAAAA,EAAE,CAACQ,KAAH,GAAWxB,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA4BA,IAAI,CAACyB,IAAL,CAAUT,EAAV,CAA5B,GAA4ChB,IAA9D;EAEAc,EAAAA,QAAQ,CAACd,IAAD,CAAR;EAED;;EClCM,SAAS0B,SAAT,CAAmBC,GAAnB,EAAwB;EAC7BA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACvC,QAAMd,EAAE,GAAG,IAAX;EACAA,IAAAA,EAAE,CAACE,QAAH,GAAcY,OAAd;EAEA;;EACAf,IAAAA,SAAS,CAACC,EAAD,CAAT;EACD,GAND;EAOD;;ECPD,SAASW,GAAT,CAAaG,OAAb,EAAqB;EACnB;EACA,OAAKD,KAAL,CAAWC,OAAX;EACD;EAED;;;EACAJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}